enum DelayedScriptStatus {
  Active,
  Paused,
  Cancelled,
  Executed
}

type DisputableDelay @entity {
  id: ID!
  dao: Bytes!
  executiongDelay: BigInt!
  delayedScriptsNewIndex: BigInt!
  delayedScripts: [DelayedScript!] @derivedFrom(field: "disputableDelay")
}

type DelayedScript @entity {
  id: ID!
  disputableDelay: DisputableDelay!
  delayedScriptId: BigInt!
  executionFromTime: BigInt!
  pausedAt: BigInt!
  delayedScriptStatus: DelayedScriptStatus!
  evmScript: Bytes!
  actionId: BigInt!
  submitter: Bytes!
  challengeId: BigInt!
  challenger: Bytes!
  challengeEndDate: BigInt!
  settledAt: BigInt!
  disputedAt: BigInt!
  executedAt: BigInt!
  submitterArbitratorFee: ArbitratorFee
  challengerArbitratorFee: ArbitratorFee
  collateralRequirement: CollateralRequirement! @derivedFrom(field: "delayedScript")
}

type CollateralRequirement @entity {
  id: ID!
  delayedScript: DelayedScript!
  token: ERC20!
  actionAmount: BigInt!
  challengeAmount: BigInt!
  challengeDuration: BigInt!
}

type ArbitratorFee @entity {
  id: ID!
  delayedScript: DelayedScript!
  token: ERC20!
  amount: BigInt!
}

type ERC20 @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}
